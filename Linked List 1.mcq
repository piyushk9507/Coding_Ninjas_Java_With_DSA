Which of these standard collection classes implements a dynamic array?

Options
This problem has only one correct answer
AbstractList
AbstractSet
Arraylist
ArrayList  ==  Correct Answer
=========================================

Which of these method of ArrayList class is used to obtain present size of an ArrayList object?

Options
This problem has only one correct answer
length()
size()     ==  Correct Answer
capacity()
index()
=========================================

Which of the following declarations would be correct for a list that will contain Integers?

This problem has only one correct answer
ArrayList<String> list = new ArrayList<String>() ;
ArrayList<int> list = new ArrayList<int>() ;
ArrayList list = new ArrayList() ;
ArrayList<Integer> list = new ArrayList<Integer>() ;       ==   Correct Answer
==============================================

Consider the following code:
ArrayList<String> list = new ArrayList<String>() ;
list.add( "apple" );
list.add( "banana" );
list.add( "carrot" );
list.add( 0, "mango" );
What element will be at index 2 of the list?

Answer = banana
==================================================

Figure Out Correct Statement
Send Feedback
Consider the following code:
ArrayList<String> list = new ArrayList<String>() ;
list.add( "Ant" );
list.add( "Bat" );
list.add( "Car" );
list.add( "Door" );
list.add( "Euro" );
Which of the following statements will replace the element "Car" with "Bus" ?


Options
This problem has only one correct answer
list[2] = "Bus" ;
list.add( "Bus", list.indexOf("Car") );
list.set( 2, "Bus" );              ==    Correct Answer
list.set( "Bus", "Car" );
================================================================================

Linked List Use Case

Linked List are best suited:

Options
This problem has only one correct answer
for relatively permanent collections of data.
for the size of the structure is constantly changing.  ==  Correct Answer
for random Access of elements
None of these
================================================================================

What is Output?

//Consider the Node class as shown below :

public class Node<T> {
  T data;
  Node<T> next;
  Node(T data){
    this.data = data;
  }
}

//Now consider following code using Node class shown above.

public  class LinkedListUse{

 public static void print(Node<Integer> head){
    Node<Integer> temp = head;

    while(temp != null){
        System.out.print(temp.data +" ");
        temp = temp.next;
    }
    System.out.println();
}

public static void main(String args[]){

    Node<Integer> node1 = new Node<Integer>(10);
    Node<Integer> node2 = new Node<Integer>(20);
    node2.next = node1;
    print(node2);
   }
}
What will be the Output ?    == 20 10 
==========================================================================






